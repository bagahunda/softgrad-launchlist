mixin modals()
  +b.modal#help-pixelPerfect
    .container
      +e.header
        | Соответствие макету
        +e.close
          svg(width="30" height="30")
            use(xlink:href="#close-icon")
      +e.content
        p Расположение блоков должно быть 1:1 по сравнению с макетом. Допускается расхождение до 5px для текста. Разрешены и даже приветствуются правки размеров и расположения криво нарисованных блоков (разница размерах в 1-2px на разных страницах).
        p Ясное дело что при изменениях контента, размеры блоков могут меняться (по высоте например), это нормально. Мы используем Pixel Perfect не для попиксельного задротства (адекватный ПМ не должен затягивать сдачу проекта, тратя время, а значит и деньги фирмы, на вылизывание каждого пикселя), а для проверки, что все базовые блоки находятся там, где надо, их размеры и отступы соответсвуют макету.

  +b.modal#help-bigData
    .container
      +e.header
        | Корректная работа при вбивании реального текста, надёжность вёрстки
        +e.close
          svg(width="30" height="30")
            use(xlink:href="#close-icon")
      +e.content
        p Вёрстка должна тянутся, не разваливаться и не терять дизайнерский вид при изменении контента на странице. Его может быть больше или меньше, чем на макете, он может быть обёрнут во всякие &lt;p&gt; из визига и т.п. Обязательно нужно проверять удаление заголовков! Бывает, что отступы между блоками после этого схлопываются, это частая ошибка, причина — отступы были заданы не для блоков, а для внутренних элементов — заголовоков.
        ol
          li Проверка ввода и удаления данных.
            p Проверяется: на странице с контентом пробуем добавлять и удалять содержимое – «что будет когда текста много?», «а когда мало?».  Обязательно пробовать менять расположение элементов, чтобы после того, как поменяли блоки местами не развалилось оформление (из-за каскада).
          li Проверка корректности работы стилей.
            p Проверяется: на страницы с контентом вбиваем текст с абзацами и без абзацев (важно! бывает горе-верстальщики прописывают стили только для абзацев), со списками и картинками, таблицами и заголовками разных уровней.

        p Это нужно, чтобы на живом сайте потом не полезли проблемы при заполнении реальными данными. Хороший пример проверочного текста находится в #[a(href="https://github.com/necolas/normalize.css/blob/v2.1.1/test.html") normalize.css] в test.html между <body> и </body>.
        p Хорошо использовать html5-тэги для разметки: header, footer, aside, nav, section, article и т.д. Кроме того, что это семантично, также повышается надёжность, «пуленепробиваемость» вёрстки. Лишний открытый или закрытый div легко может поломать вёрстку. Но когда каркас сайта — атомарные и редко повторяющиеся html5-тэги, то «поломка» локализуется в пределах html5-тэга.

  +b.modal#help-doctype
    .container
      +e.header
        | Кодировка и DOCTYPE
        +e.close
          svg(width="30" height="30")
            use(xlink:href="#close-icon")
      +e.content
        ol
          li Кодировка UTF-8
            p Зачем нужно: UTF-8 это универсальность и совместимость. Это современный стандарт, за ним даже не будущее, а настоящее. Как проверяется: в FF Инструменты→Информация о странице, в появившемся окне должно быть написано «Кодировка: UTF8». Эта кодировка должна использоваться для всех файлов: html, css, js (если файлы в разных кодировках могут быть проблемы)

          li DOCTYPE: HTML5
            p Зачем нужно: наличие корректного doctype необходимо чтоб страницы отображались в соответсвии со стандартами. Новый doctype позволяет нам смело использовать современные тэги (canvas, header, article,...) и старые проверенные решения, ранее бывшые в опале (например embed). HTML5 — это современный стандарт, в нём можно писать и в строгом XHTML-синтаксисе. #[a(href="http://vimeo.com/19072506") Аргументация для сомневающихся].

  +b.modal#help-imagesLoad
    .container
      +e.header
        | Доступность при выключенных(загружающихся) картинках
        +e.close
          svg(width="30" height="30")
            use(xlink:href="#close-icon")
      +e.content
        p Надписи (особенно логотип и главное меню сайта) должны оставаться читабельными, у всех информационных картинок должны быть подписи аккуратным небольшим серым шрифтом (да, для img можно задавать font – это внешний вид alt-текста, что выводится вместо картинки). Картинки часто отключают при использовании дорогого инета, тарифицируемого по траффику (GPRS, роуминг).

  +b.modal#help-formValidation
    .container
      +e.header
        | Валидация заполнения формы
        +e.close
          svg(width="30" height="30")
            use(xlink:href="#close-icon")
      +e.content
        ol
          li HTML5 валидация заполнения формы.
            p Практическая ценность пока-что невелика, ведь серверная проверка ввода данных тоже может быть реализована без перезагрузки страницы (через ajax), но это говорит о проф. уровне исполнителя — у редкого числа юзеров современных браузеров с отключенным javascript, проверка ввода данных произойдёт средствами браузера, а не сервера. Проверка в Chrome или в Safari: выключаем javascript, не заполняем форму, жмём Submit – должны появится уведомления о необходимости заполнить поля.
          li JS-валидация формы
            p Это ожидаемое поведение. Пользователи привыкли, что если они неправильно заполнят форму, им не дадут её отправить, а укажут на ошибки. Проверка: включаем javascript, не заполняем форму, жмём Submit – должны появится уведомления о необходимости заполнить поля.

  +b.modal#help-formLabels
    .container
      +e.header
        | Label и input/select должны быть слинкованы
        +e.close
          svg(width="30" height="30")
            use(xlink:href="#close-icon")
      +e.content
        p Это нужно для удобства юзеров. Также это очень облегчает жизнь пользователям с ограниченными физическими возможностями. Проверяется кликом по label – должен активироваться соответствующий ему элемент ввода.

  +b.modal#help-inputType
    .container
      +e.header
        | Правильные input type=”email/url/tel”
        +e.close
          svg(width="30" height="30")
            use(xlink:href="#close-icon")
      +e.content
        p Это тоже часть валидации. Также на мобильных устройствах будет показываться клавиатура, соответствующая формату поля ввода.

  +b.modal#help-titles
    .container
      +e.header
        | Правильная структура заголовков (H1,H2,… и т.д. и TITLE)
        +e.close
          svg(width="30" height="30")
            use(xlink:href="#close-icon")
      +e.content
        p Это забота о семантичности кода, заголовки структурируют сайт, делают его корректным документом. Корректный Document Outline важен для SEO.
